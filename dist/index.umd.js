(function(n,t){typeof exports=="object"&&typeof module<"u"?t(exports,require("react")):typeof define=="function"&&define.amd?define(["exports","react"],t):(n=typeof globalThis<"u"?globalThis:n||self,t(n["@ldlework/demo-lib-react"]={},n.React))})(this,function(n,t){"use strict";const f=({containerRef:m,draw:c})=>{const s=t.useRef(null);return t.useEffect(()=>{const l=m.current;if(!l){console.log("No container");return}let e=s.current;e||(console.log("No canvas"),s.current=e=document.createElement("canvas"),l.appendChild(e));const i=e.getContext("2d");if(!i){console.log("No context");return}let a,d=0;const r=()=>{const o=window.devicePixelRatio,{width:h,height:w}=e.parentElement.getBoundingClientRect();e.width=h*o,e.height=w*o,i.scale(o,o)},u=()=>{d++,i.fillStyle="black",i.fillRect(0,0,e.width,e.height),c&&c(i,e,d),a=window.requestAnimationFrame(u)};return r(),window.addEventListener("resize",r),u(),()=>{window.removeEventListener("resize",r),window.cancelAnimationFrame(a)}},[c]),null};n.Canvas=f,Object.defineProperty(n,Symbol.toStringTag,{value:"Module"})});
//# sourceMappingURL=index.umd.js.map
