{"version":3,"file":"index.es.js","sources":["../src/Canvas.tsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react'\r\n\r\ninterface CanvasProps {\r\n    containerRef: React.RefObject<HTMLDivElement>\r\n    draw?: (ctx: CanvasRenderingContext2D, canvas: HTMLCanvasElement, frameCount: number) => void\r\n}\r\n\r\nexport const Canvas: React.FC<CanvasProps> = ({\r\n    containerRef,\r\n    draw,\r\n}) => {\r\n    const canvasRef = useRef<HTMLCanvasElement | null>(null)\r\n\r\n    useEffect(() => {\r\n        const container = containerRef.current\r\n        if (!container) {\r\n            console.log(\"No container\")\r\n            return\r\n        }\r\n\r\n        let canvas = canvasRef.current\r\n        if (!canvas) {\r\n            console.log(\"No canvas\")\r\n            canvasRef.current = canvas = document.createElement('canvas')\r\n            container.appendChild(canvas)\r\n        }\r\n\r\n        const ctx = canvas.getContext('2d')\r\n        if (!ctx) {\r\n            console.log(\"No context\")\r\n            return\r\n        }\r\n\r\n        let animationFrameId: number\r\n        let frameCount = 0\r\n\r\n        const handleResize = () => {\r\n            const scale = window.devicePixelRatio\r\n            const { width, height } = canvas.parentElement!.getBoundingClientRect()\r\n            canvas.width = width * scale\r\n            canvas.height = height * scale\r\n            ctx.scale(scale, scale)\r\n        }\r\n\r\n        const render = () => {\r\n            frameCount++\r\n            ctx.fillStyle = 'black'\r\n            ctx.fillRect(0, 0, canvas.width, canvas.height)\r\n\r\n            if (draw) {\r\n                draw(ctx, canvas, frameCount)\r\n            }\r\n\r\n            animationFrameId = window.requestAnimationFrame(render)\r\n        }\r\n\r\n        handleResize()\r\n        window.addEventListener('resize', handleResize)\r\n\r\n        render()\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize)\r\n            window.cancelAnimationFrame(animationFrameId)\r\n        }\r\n    }, [draw])\r\n\r\n    return null\r\n}"],"names":["Canvas","containerRef","draw","canvasRef","useRef","useEffect","container","canvas","ctx","animationFrameId","frameCount","handleResize","scale","width","height","render"],"mappings":";AAOO,MAAMA,IAAgC,CAAC;AAAA,EAC1C,cAAAC;AAAA,EACA,MAAAC;AACJ,MAAM;AACI,QAAAC,IAAYC,EAAiC,IAAI;AAEvD,SAAAC,EAAU,MAAM;AACZ,UAAMC,IAAYL,EAAa;AAC/B,QAAI,CAACK,GAAW;AACZ,cAAQ,IAAI,cAAc;AAC1B;AAAA,IACJ;AAEA,QAAIC,IAASJ,EAAU;AACvB,IAAKI,MACD,QAAQ,IAAI,WAAW,GACvBJ,EAAU,UAAUI,IAAS,SAAS,cAAc,QAAQ,GAC5DD,EAAU,YAAYC,CAAM;AAG1B,UAAAC,IAAMD,EAAO,WAAW,IAAI;AAClC,QAAI,CAACC,GAAK;AACN,cAAQ,IAAI,YAAY;AACxB;AAAA,IACJ;AAEI,QAAAC,GACAC,IAAa;AAEjB,UAAMC,IAAe,MAAM;AACvB,YAAMC,IAAQ,OAAO,kBACf,EAAE,OAAAC,GAAO,QAAAC,EAAA,IAAWP,EAAO,cAAe;AAChD,MAAAA,EAAO,QAAQM,IAAQD,GACvBL,EAAO,SAASO,IAASF,GACrBJ,EAAA,MAAMI,GAAOA,CAAK;AAAA,IAAA,GAGpBG,IAAS,MAAM;AACjB,MAAAL,KACAF,EAAI,YAAY,SAChBA,EAAI,SAAS,GAAG,GAAGD,EAAO,OAAOA,EAAO,MAAM,GAE1CL,KACKA,EAAAM,GAAKD,GAAQG,CAAU,GAGbD,IAAA,OAAO,sBAAsBM,CAAM;AAAA,IAAA;AAG7C,WAAAJ,KACN,OAAA,iBAAiB,UAAUA,CAAY,GAEvCI,KAEA,MAAM;AACF,aAAA,oBAAoB,UAAUJ,CAAY,GACjD,OAAO,qBAAqBF,CAAgB;AAAA,IAAA;AAAA,EAChD,GACD,CAACP,CAAI,CAAC,GAEF;AACX;"}