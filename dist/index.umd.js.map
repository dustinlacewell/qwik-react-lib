{"version":3,"file":"index.umd.js","sources":["../src/Canvas.tsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react'\r\n\r\ninterface CanvasProps {\r\n    containerRef: React.RefObject<HTMLDivElement>\r\n    draw?: (ctx: CanvasRenderingContext2D, canvas: HTMLCanvasElement, frameCount: number) => void\r\n}\r\n\r\nexport const Canvas: React.FC<CanvasProps> = ({\r\n    containerRef,\r\n    draw,\r\n}) => {\r\n    const canvasRef = useRef<HTMLCanvasElement | null>(null)\r\n\r\n    useEffect(() => {\r\n        const container = containerRef.current\r\n        if (!container) {\r\n            console.log(\"No container\")\r\n            return\r\n        }\r\n\r\n        let canvas = canvasRef.current\r\n        if (!canvas) {\r\n            console.log(\"No canvas\")\r\n            canvasRef.current = canvas = document.createElement('canvas')\r\n            container.appendChild(canvas)\r\n        }\r\n\r\n        const ctx = canvas.getContext('2d')\r\n        if (!ctx) {\r\n            console.log(\"No context\")\r\n            return\r\n        }\r\n\r\n        let animationFrameId: number\r\n        let frameCount = 0\r\n\r\n        const handleResize = () => {\r\n            const scale = window.devicePixelRatio\r\n            const { width, height } = canvas.parentElement!.getBoundingClientRect()\r\n            canvas.width = width * scale\r\n            canvas.height = height * scale\r\n            ctx.scale(scale, scale)\r\n        }\r\n\r\n        const render = () => {\r\n            frameCount++\r\n            ctx.fillStyle = 'black'\r\n            ctx.fillRect(0, 0, canvas.width, canvas.height)\r\n\r\n            if (draw) {\r\n                draw(ctx, canvas, frameCount)\r\n            }\r\n\r\n            animationFrameId = window.requestAnimationFrame(render)\r\n        }\r\n\r\n        handleResize()\r\n        window.addEventListener('resize', handleResize)\r\n\r\n        render()\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize)\r\n            window.cancelAnimationFrame(animationFrameId)\r\n        }\r\n    }, [draw])\r\n\r\n    return null\r\n}"],"names":["Canvas","containerRef","draw","canvasRef","useRef","useEffect","container","canvas","ctx","animationFrameId","frameCount","handleResize","scale","width","height","render"],"mappings":"sRAOa,MAAAA,EAAgC,CAAC,CAC1C,aAAAC,EACA,KAAAC,CACJ,IAAM,CACI,MAAAC,EAAYC,SAAiC,IAAI,EAEvDC,OAAAA,EAAAA,UAAU,IAAM,CACZ,MAAMC,EAAYL,EAAa,QAC/B,GAAI,CAACK,EAAW,CACZ,QAAQ,IAAI,cAAc,EAC1B,MACJ,CAEA,IAAIC,EAASJ,EAAU,QAClBI,IACD,QAAQ,IAAI,WAAW,EACvBJ,EAAU,QAAUI,EAAS,SAAS,cAAc,QAAQ,EAC5DD,EAAU,YAAYC,CAAM,GAG1B,MAAAC,EAAMD,EAAO,WAAW,IAAI,EAClC,GAAI,CAACC,EAAK,CACN,QAAQ,IAAI,YAAY,EACxB,MACJ,CAEI,IAAAC,EACAC,EAAa,EAEjB,MAAMC,EAAe,IAAM,CACvB,MAAMC,EAAQ,OAAO,iBACf,CAAE,MAAAC,EAAO,OAAAC,CAAA,EAAWP,EAAO,cAAe,wBAChDA,EAAO,MAAQM,EAAQD,EACvBL,EAAO,OAASO,EAASF,EACrBJ,EAAA,MAAMI,EAAOA,CAAK,CAAA,EAGpBG,EAAS,IAAM,CACjBL,IACAF,EAAI,UAAY,QAChBA,EAAI,SAAS,EAAG,EAAGD,EAAO,MAAOA,EAAO,MAAM,EAE1CL,GACKA,EAAAM,EAAKD,EAAQG,CAAU,EAGbD,EAAA,OAAO,sBAAsBM,CAAM,CAAA,EAG7C,OAAAJ,IACN,OAAA,iBAAiB,SAAUA,CAAY,EAEvCI,IAEA,IAAM,CACF,OAAA,oBAAoB,SAAUJ,CAAY,EACjD,OAAO,qBAAqBF,CAAgB,CAAA,CAChD,EACD,CAACP,CAAI,CAAC,EAEF,IACX"}